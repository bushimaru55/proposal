# Generated by Django 5.0.1 on 2025-10-29 03:58

import django.contrib.postgres.fields
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('analysis', '0001_initial'),
        ('companies', '0001_initial'),
        ('core', '0001_initial'),
        ('products', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='TalkScript',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('script_sections', models.JSONField(default=dict, verbose_name='スクリプトセクション')),
                ('selected_sections', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=50), blank=True, default=list, size=None, verbose_name='選択されたセクション')),
                ('model_used', models.CharField(max_length=50, verbose_name='使用モデル')),
                ('total_tokens', models.IntegerField(blank=True, null=True, verbose_name='トークン数')),
                ('generation_time', models.FloatField(blank=True, null=True, verbose_name='生成時間(秒)')),
                ('status', models.CharField(choices=[('draft', '下書き'), ('active', '使用中'), ('archived', 'アーカイブ')], default='active', max_length=20, verbose_name='ステータス')),
                ('version', models.IntegerField(default=1, verbose_name='バージョン')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='作成日時')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='更新日時')),
                ('analysis', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='analysis.analysis', verbose_name='分析結果')),
                ('company', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='companies.company', verbose_name='企業情報')),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='talk_scripts', to=settings.AUTH_USER_MODEL, verbose_name='作成者')),
                ('template', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='core.prompttemplate', verbose_name='使用テンプレート')),
            ],
            options={
                'verbose_name': 'トークスクリプト',
                'verbose_name_plural': 'トークスクリプト',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='SalesOutcome',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('outcome', models.CharField(choices=[('won', '受注'), ('lost', '失注'), ('pending', '検討中'), ('no_response', '無応答')], max_length=20, verbose_name='結果')),
                ('what_worked', models.TextField(blank=True, verbose_name='うまくいった点')),
                ('what_didnt_work', models.TextField(blank=True, verbose_name='改善が必要な点')),
                ('customer_objections', models.JSONField(blank=True, default=list, verbose_name='顧客の懸念点')),
                ('meeting_date', models.DateField(blank=True, null=True, verbose_name='商談日')),
                ('notes', models.TextField(blank=True, verbose_name='その他メモ')),
                ('used_for_training', models.BooleanField(default=True, verbose_name='学習データとして使用')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='登録日時')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='更新日時')),
                ('recorded_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sales_outcomes', to=settings.AUTH_USER_MODEL, verbose_name='記録者')),
                ('talk_script', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='outcomes', to='sales.talkscript', verbose_name='トークスクリプト')),
            ],
            options={
                'verbose_name': '商談結果',
                'verbose_name_plural': '商談結果',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='TrainingSession',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('duration_minutes', models.IntegerField(blank=True, null=True, verbose_name='練習時間(分)')),
                ('notes', models.TextField(blank=True, verbose_name='気づき・メモ')),
                ('self_rating', models.IntegerField(blank=True, choices=[(1, '1点'), (2, '2点'), (3, '3点'), (4, '4点'), (5, '5点')], null=True, verbose_name='自己評価(1-5)')),
                ('trained_at', models.DateTimeField(auto_now_add=True, verbose_name='実施日時')),
                ('talk_script', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='training_sessions', to='sales.talkscript', verbose_name='トークスクリプト')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='training_sessions', to=settings.AUTH_USER_MODEL, verbose_name='実施者')),
            ],
            options={
                'verbose_name': 'トレーニングセッション',
                'verbose_name_plural': 'トレーニングセッション',
                'ordering': ['-trained_at'],
            },
        ),
        migrations.CreateModel(
            name='ProposalProductLink',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('relevance_score', models.FloatField(default=0.0, verbose_name='関連性スコア')),
                ('matching_reasons', django.contrib.postgres.fields.ArrayField(base_field=models.TextField(), blank=True, default=list, size=None, verbose_name='マッチング理由')),
                ('proposal_order', models.IntegerField(default=1, verbose_name='提案順序')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='作成日時')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='products.product', verbose_name='商品')),
                ('used_knowledge', models.ManyToManyField(blank=True, to='products.productknowledge', verbose_name='使用ナレッジ')),
                ('talk_script', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='proposed_products', to='sales.talkscript', verbose_name='トークスクリプト')),
            ],
            options={
                'verbose_name': '提案商品',
                'verbose_name_plural': '提案商品',
                'ordering': ['talk_script', 'proposal_order'],
                'unique_together': {('talk_script', 'product')},
            },
        ),
    ]
